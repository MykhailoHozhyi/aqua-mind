{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaMind app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaMind app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://aqua-mind.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "Operations about user."
    },
    {
      "name": "WaterRate",
      "description": "Calc of daily water intake."
    },
    {
      "name": "Water",
      "description": "Water operations."
    },
    {
      "name": "Today",
      "description": "Information about water consumption per day."
    },
    {
      "name": "Month",
      "description": "Information about water consumption per month."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "john@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session",
        "operationId": "refreshSession",
        "description": "Refresh user's session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken",
                  "sessionId"
                ],
                "properties": {
                  "refreshToken": {
                    "description": "Refresh token",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "sessionId": {
                    "description": "Session id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId"
                ],
                "properties": {
                  "sessionId": {
                    "description": "Session id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout user"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user",
        "operationId": "getUserByID",
        "description": "Get user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "operationId": "patchUser",
        "description": "Update a contact with the provided payload. Only fields in the request body will be updated.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gender": {
                    "description": "Choose your gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "default": "woman"
                  },
                  "name": {
                    "description": "Name of user",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "Users's email address",
                    "type": "string",
                    "example": "Doe@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/patchUser"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/photo": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update avatar",
        "operationId": "patchUserPhoto",
        "description": "Update a contact with avatar.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "description": "Link to users's avatar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/patchUser"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water-rate": {
      "get": {
        "tags": [
          "WaterRate"
        ],
        "summary": "Get user's water consumption rate",
        "operationId": "getWaterRate",
        "description": "Retrieve the current water consumption rate for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water rate found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water rate found successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/waterRate"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "WaterRate"
        ],
        "summary": "Update user's water consumption rate",
        "operationId": "updateWaterRate",
        "description": "Modify the water consumption rate for the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "waterRate": {
                    "type": "number",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water rate updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water rate updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "waterRate": {
                          "type": "number",
                          "example": 1500
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/today": {
      "get": {
        "tags": [
          "Today"
        ],
        "summary": "Get today's water consumption",
        "operationId": "getTodayWater",
        "description": "Retrieve the user's water consumption records for the current day.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water consumption data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water consumption retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "string",
                          "example": "75%"
                        },
                        "records": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "$ref": "#/components/schemas/water"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/month": {
      "get": {
        "tags": [
          "Month"
        ],
        "summary": "Get today's water consumption",
        "operationId": "getMonthlyWater",
        "description": "Retrieve the user's water consumption records for the current day.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Water consumption data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water consumption retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "percentage": {
                          "type": "string",
                          "example": "75%"
                        },
                        "records": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "$ref": "#/components/schemas/water"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "password",
          "gender",
          "waterRate"
        ],
        "properties": {
          "gender": {
            "description": "Choose your gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "default": "woman"
          },
          "name": {
            "description": "Enter your name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email address",
            "type": "string",
            "example": "Doe@example.com"
          },
          "password": {
            "description": "Enter your password",
            "type": "string"
          },
          "photo": {
            "description": "Link to user's avatar",
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "waterRate": {
            "description": "Daily norm water",
            "type": "integer",
            "example": 1500
          }
        }
      },
      "patchUser": {
        "type": "object",
        "properties": {
          "gender": {
            "description": "Choose your gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "default": "woman"
          },
          "name": {
            "description": "Enter your name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email address",
            "type": "string",
            "example": "Doe@example.com"
          },
          "password": {
            "description": "Enter your password",
            "type": "string"
          },
          "photo": {
            "description": "Link to user's avatar",
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "waterRate": {
            "description": "Daily norm water",
            "type": "integer",
            "example": 1500
          }
        }
      },
      "waterRate": {
        "type": "object",
        "properties": {
          "waterRate": {
            "type": "number",
            "example": 1500
          }
        },
        "required": [
          "waterRate"
        ]
      },
      "water": {
        "type": "object",
        "required": [
          "date",
          "volume"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-02-05T12:30",
            "description": "Date and time in ISO format (YYYY-MM-DDTHH:mm)"
          },
          "volume": {
            "type": "number",
            "minimum": 50,
            "maximum": 5000,
            "example": 500
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Invalid userId",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid userId"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid userId"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}