{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaMind app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaMind app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://aqua-mind.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "Operations about user."
    },
    {
      "name": "WaterRate",
      "description": "Calc of daily water intake."
    },
    {
      "name": "Water",
      "description": "Water operations."
    },
    {
      "name": "Today",
      "description": "Information about water consumption per day."
    },
    {
      "name": "Month",
      "description": "Information about water consumption per month."
    }
  ],
  "paths": {
    "/user/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "operationId": "getUserByID",
        "description": "Get user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userSchema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "operationId": "patchUser",
        "description": "Update a contact with the provided payload. Only fields in the request body will be updated.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the user to update"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gender": {
                    "description": "Choose your gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "default": "woman"
                  },
                  "name": {
                    "description": "Name of user",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "Users's email address",
                    "type": "string",
                    "example": "Doe@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userSchema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/{userId}/photo": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update avatar",
        "operationId": "patchUserPhoto",
        "description": "Update a contact with avatar.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "ID of the contact to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "description": "Link to users's avatar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userSchema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create water record",
        "operationId": "createWaterRecord",
        "description": "Create a water record with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "volume"
                ],
                "properties": {
                  "date": {
                    "description": "Water's date",
                    "type": "string",
                    "example": "2024-12-25T10:44"
                  },
                  "volume": {
                    "description": "Water's volume",
                    "type": "number",
                    "example": "250,"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a water record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a water record!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterSchema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/water/{waterId}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Patch water record by id",
        "operationId": "patchWater",
        "description": "Patch water record by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "Water's date",
                    "type": "string",
                    "example": "2024-12-25T10:44"
                  },
                  "volume": {
                    "description": "Water's volume",
                    "type": "number",
                    "example": "250,"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch water record by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a water record with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterSchema"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water record by id",
        "operationId": "deleteWater",
        "description": "Delete water record by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete water record by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted a water record with id 65ca67e7ae7f10c88b598384!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "userSchema": {
        "type": "object",
        "required": [
          "email",
          "password",
          "gender"
        ],
        "properties": {
          "gender": {
            "description": "Choose your gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "default": "woman"
          },
          "name": {
            "description": "Enter your name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email address",
            "type": "string",
            "example": "Doe@example.com"
          },
          "password": {
            "description": "Enter your password",
            "type": "string"
          },
          "photo": {
            "description": "Link to user's avatar",
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      },
      "waterSchema": {
        "type": "object",
        "required": [
          "_id",
          "date",
          "volume",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Water's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "date": {
            "description": "Water's date",
            "type": "string",
            "example": "2024-12-25T10:44"
          },
          "volume": {
            "description": "Water's volume",
            "type": "number",
            "example": 250
          },
          "userId": {
            "description": "Water's owner id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Invalid userId",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid userId"
                }
              },
              "data": {
                "type": "object",
                "required": [
                  "message"
                ],
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid userId"
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "data": {
                "type": "object",
                "required": [
                  "message"
                ],
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}